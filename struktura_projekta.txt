real-estate-ljubljana/
│
├── data/
│   ├── raw/                    # Neprečiščeni podatki (scrape, GURS, ...)
│   ├── processed/              # Prečiščeni podatki (standardizirani naslovi, mestne četrti, ...)
│   └── external/               # Dodatni viri (makroekonomija, open data, ...)
│
├── notebooks/
│   ├── 01_scraping.ipynb       # Scrapanje nepremicnine.net
│   ├── 02_cleaning.ipynb       # Čiščenje in obogatitev podatkov
│   ├── 03_exploration.ipynb    # EDA (analiza trga, mestne četrti, časovni trendi)
│   ├── 04_modeling.ipynb       # XGBoost in napovedi
│   └── 05_comparison.ipynb     # Primerjava oglaševanih vs dejanskih cen
│
├── src/
│   ├── data_processing.py      # Funkcije za čiščenje, mestne četrti, geokodiranje
│   ├── modeling.py             # Trening, evalvacija modelov
│   └── visualization.py        # Grafi (seaborn, matplotlib, plotly)
│
├── reports/
│   ├── figures/                # Grafi za poročilo
│   └── final_report.pdf        # Končni PDF/HTML poročilo
│
├── presentation/               # Slajdi za predstavitev
│
├── README.md                   # Opis projekta, navodila, cilji
└── requirements.txt            # Knjižnice (pandas, xgboost, etc.)

template_cells = {
    "01_scraping.ipynb": [
        "# 📦 Notebook 01 – Scraping aktualnih podatkov\n\nTa notebook vsebuje kodo za pridobivanje oglasov iz nepremicnine.net (stanovanja in hiše).",
        "from scrape_nepremicnine import scrape_nepremicnine\n\nscrape_nepremicnine('stanovanje')\nscrape_nepremicnine('hisa')"
    ],
    "02_cleaning.ipynb": [
        "# 🧹 Notebook 02 – Čiščenje in obogatitev podatkov\n\nV tem zvezku bomo obdelali surove CSV-je (stanovanja in hiše), očistili podatke in dodali dodatne značilnosti.",
        "import pandas as pd\n\n# Naloži podatke\nstanovanja = pd.read_csv('../stanovanje_scraped.csv', sep=';')\nhise = pd.read_csv('../hisa_scraped.csv', sep=';')\n\n# Prikaz prvih vrstic\ndisplay(stanovanja.head())"
    ],
    "03_exploration.ipynb": [
        "# 📊 Notebook 03 – Raziskovalna analiza (EDA)\n\nAnaliza cen, površin, mestnih četrti, trendov, novogradenj itd.",
        "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Primer: razporeditev cen na m2\nsns.histplot(stanovanja['cena_m2'].dropna(), bins=40)\nplt.title('Porazdelitev cene na m² - Stanovanja')\nplt.show()"
    ],
    "04_modeling.ipynb": [
        "# 🧠 Notebook 04 – Modeliranje cen nepremičnin\n\nUporaba XGBoost za napoved cen glede na značilnosti nepremičnin.",
        "from xgboost import XGBRegressor\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_absolute_error\n\n# 
	Primer priprave podatkov\nX = stanovanja[['m2', 'st_sob', 'leto_gradnje']].dropna()\ny = stanovanja.loc[X.index, 'cena']
	\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)\nmodel = XGBRegressor()\nmodel.fit(X_train, y_train)\n\npreds = model.predict(X_test)\nprint(\"MAE:\", mean_absolute_error(y_test, preds))"
    ],
    "05_comparison.ipynb": [
        "# ⚖️ Notebook 05 – Primerjava z realnostjo\n\nPrimerjava oglaševanih cen z ocenjenimi realnimi vrednostmi (če je možno).\nLahko vključuje popuste, heuristike ali delne GURS informacije.",
        "# TODO: Uvoz GURS-ovih podatkov ali alternativnih virov za primerjavo"
    ]
}
